#!/usr/bin/env -S scala-cli shebang --server=false --suppress-directives-in-multiple-files-warning

//> using file ../project.scala

import scala.collection.immutable
import com.mchange.sysadmin.taskrunner.*
import java.time.{Instant,ZoneId}
import java.time.format.DateTimeFormatter
import java.time.temporal.ChronoUnit

val yesterday = Instant.now().minus(1, ChronoUnit.DAYS).atZone(ZoneId.systemDefault())

val DayFormatterForHumans = DateTimeFormatter.ISO_LOCAL_DATE
val DayFormatterForFilenames = DateTimeFormatter.ofPattern("yyyyMMdd")

val logfileMain   = "/var/log/nginx/interfluidity.com-access.log-" + DayFormatterForFilenames.format(yesterday) + ".gz"
val logfileDrafts = "/var/log/nginx/drafts.interfluidity.com-access.log-" + DayFormatterForFilenames.format(yesterday) + ".gz"
val logfileTech   = "/var/log/nginx/tech.interfluidity.com-access.log-" + DayFormatterForFilenames.format(yesterday) + ".gz"

val tr = TaskRunner[Unit]

val task = new tr.Task:
  val name = "Referrers " + DayFormatterForHumans.format(yesterday)
  val init = ()
  val bestEffortSetups = Set(
    tr.exec("www.interfluidity.com", List("report-referrers", logfileMain, "interfluidity.com")),
    tr.exec("drafts.interfluidity.com", List("report-referrers", logfileDrafts, "interfluidity.com")),
    tr.exec("tech.interfluidity.com", List("report-referrers", logfileTech, "interfluidity.com"))
  )
  val sequential = Nil
  val bestEffortFollowups = Set.empty

val reporters = Reporters.default()

tr.runAndReport(task,reporters)

