#!/usr/bin/env -S scala-cli shebang --server=false --suppress-directives-in-multiple-files-warning

//> using file ../project.scala

// for debugging
// tail -f /var/log/letsencrypt/letsencrypt.log

// when we run this noninteractively, we do it in a systemd timer,
// on an odd day with timing blurred by RandomizedDelaySec=3hr
//
// so there's no need for a random sleep to prevent a
// horde of simultaneous renewals

import scala.collection.*
import com.mchange.sysadmin.*

val tr = new TaskRunner[Unit]

def itRan( completed : tr.Completed ) : Boolean =
  val stdout = completed.result.stepOut
  stdout.contains("Certificate not yet due") || stdout.contains("Renewing an existing certificate")

val task = new tr.Task:
  val name = "Renew certs"
  val init = ()
  val bestEffortSetups = Nil
  val sequential = List(
    tr.exec("Stop nginx", List("systemctl", "stop", "nginx")),
    tr.exec("Renew certs", List("certbot", "renew", "--standalone", "--no-random-sleep-on-renew"), isSuccess = itRan),
  )
  val bestEffortFollowups = List(
    tr.exec("Restart nginx", List("systemctl","restart","nginx"))
  )

val reporters = TaskRunner.Reporters.default()

tr.runAndReport(task,reporters)

